(*Scotland Particulate Matter Daily Mean Concentration*)

NotebookDirectory[]
SetDirectory[FileNameJoin[{NotebookDirectory[],"DataDir"}]]

(*Import the list of Scotland Sites to be used for our analysis. We will only use sites that have a complete dataset for PM10 and PM2.5, as well as values for 2019 and 2020*)

(*This variable can be used for both 2019 and 2020 so does not need a year indicator*)
scotSites=Import["filtered.xlsx",{"Sheets","Sheet1"}];

(*Take the Intersection of the sites listed in Column 3 (2020) and the sites listed in Column 4 (2019) in order to determine which sites appear in both years*)
intersectingScotSites =Intersection[scotSites[[All,3]],scotSites[[All,4]]]

(*Determine the number of sites that will be included in our dataset for Scotland by using Length*)
intersectingScotSites//Length

(*Scotland Particulate Matter Mean Concentration for 2019*)

(*Import Scotland Sites 2019 Excel*)

(*When importing this spreadsheet, remove the first 3 and last 4 rows*)
scot19= Import["Scotland Sites 2019.xlsx",{"Data",1,4;;-5}];

(*Determine the dimensions of our spreadsheet*)
scot19 //Dimensions

(*Transpose the values of the spreadsheet, so the site names are listed in one single column and the date is listed in rows*)
scot19trans=scot19//Transpose;

(*Reconfirm the dimensions after performing the transpose*)
scot19trans//Dimensions

(*Request a small snippet of the dataset in Grid form to ensure this is how we want the data to look after the Transpose*)
scot19trans[[1;;6,1;;5]]//Grid

(*Reconfirm the length of the variable*)
Length[scot19trans[[2]]]

(*Remove the Status Rows*)

(*Retrieve the positions for Scotland sites which contain data for PM10*)
scot19PM10=Position[scot19trans,"PM10 particulate matter (Hourly measured)"]

(*Transpose the data in order to have all of the rows together and all of the columns together*)
scot19PM10trans=scot19PM10//Transpose

(*Request the positions for the rows only*)
scot19PM10trans[[1]]

(*Confirm the length of the rows - this should match the number of sites*)
Length[scot19PM10trans[[1]]]

(*Repeat the same steps above to retrieve the positions for Scotland sites which contain data for PM2.5*)
scot19PM25=Position[scot19trans,"PM2.5 particulate matter (Hourly measured)"]

(*Transpose the data in order to have all of the rows together and all of the columns together*)
scot19PM25trans = scot19PM25//Transpose

(*Request the positions for the rows only*)
scot19PM25trans[[1]]

(*Confirm the length of the rows - this should match the number of sites*)
Length[scot19PM25trans[[1]]]

(*Join the positions for the PM2.5 and PM10 rows. Sorting them will ensure they are ordered by Site*)
pmAllscot19=Join[scot19PM10trans[[1]],scot19PM25trans[[1]]]//Sort

(*Join the Date/Time data with the site and pollutant information and store in a new variable*)
scotland19nostatus=Join[scot19trans[[1;;2]],scot19trans[[pmAllscot19]]]

(*Confirm the dimensions of new variable*)
scotland19nostatus//Dimensions

(*Check a small output of our new variable in Grid form*)
scotland19nostatus[[1;;10,1;;5]]//Grid

(*Turn Hourly Measurements into Daily Values by Averaging Results*)

scot19Clean= scotland19nostatus;

(*- Get the means of everything (not separate into PM)*)

(*Calculate the mean of everything for 2019 - NOT separate by PM*)
scot19dat = scot19Clean[[3;;,3;;]]//Transpose

(*Checking the result for one site*)
scot19dat[[1;;,1]];

(*Partition the defined variable by 24 so we can calculate the mean per day*)
scot19part=N@(Mean/@(Partition[scot19dat,24]));

(*Reconfirm the dimensions for the variable*)
Dimensions[scot19part]

(*Transpose the variable*)
scot19part=scot19part//Transpose

(*Reconfirm the dimensions*)
scot19part//Dimensions
scot19part[[1]];

(*Remove any cells where there is "No data" listed and calculate the daily mean*)
scot19DailyMean=scot19part/.("No data":>0)

(*Calculate the number of days that sites do not contain any data. Ensure that each site has a minimum of 180 days of data*)
0/.(Counts/@scot19DailyMean)

(*The dimensions should be the total number of sites times two because this daily Mean is for PM10 and PM2.5*)
Dimensions[scot19DailyMean]

(*PM10 at Scotland Sites in 2019*)

(*Calculating the Mean of PM10 Only*)

(*Retrieve the positions for Scotland sites which contain data for PM10 and Transpose the data so it is separated into rows and columns*)
CleanedScot19PM10Rows = Position[scot19Clean,"PM10 particulate matter (Hourly measured)"]//Transpose

(*Request the positions for the rows only*)
CleanedScot19PM10Rows[[1]]
scot19PM10dat=scot19Clean[[CleanedScot19PM10Rows[[1]],3;;]]//Transpose;

(*Reconfirm the dimensions*)
Dimensions[scot19PM10dat]

(*Remove any cells that do not have any data and then calculate the daily mean *)
scot19PM10part=N@(Mean/@(Partition[scot19PM10dat,24]))

(*Reconfirm the dimenstions to ensure we have the appropriate number of means to sites*)
Dimensions[scot19PM10part]

(*Transpose the data and set the variable to itself*)
scot19PM10part=scot19PM10part//Transpose

(*Reconfirm the dimensions after the transpose*)
scot19PM10part//Dimensions

(*Replace any cells containing 'No data' with 0*)
scot19PM10DailyMean=scot19PM10part/.("No data":>0);

(*Confirm the dimensions have not changed*)
scot19PM10DailyMean//Dimensions

(*- Visualise all PM data from 2019 for Scotland in a table*)

(*Exclude the heading labels from scot19Clean*)
scotland19CleanTEMP = scot19Clean[[3;;,1;;2]];

(*Join the site names and PM types columns WITH the daily mean values*)
scot19joinedTab=Partition[Flatten@Table[{scotland19CleanTEMP[[row,1;;2]],scot19DailyMean[[row]]},{row,1,Length[scot19DailyMean]}],367];

(*Confirm the dimensions of the new variable*)
scot19joinedTab//Dimensions

(*Create a new heading labels {Site, Particulate Matter, 365 Dates *)
scot19dateObject=scot19Clean[[1,3;;]]//DeleteDuplicates;

(*Confirm the dimensions for the datObject variable reflects the number of days in the year*)
scot19dateObject//Dimensions

(*Create a heading with Site and Particulate Matter*)
heading={"Site","Particulate Matter"};

(*Join the previously created heading with the dateObject*)
scot19heading=Join[heading,scot19dateObject];

(*Confirm the length of the new heading*)
scot19heading//Length

(*Join the two tables that were previously created - scot19JoinedTab and scot19heading*)
scot19dailyMeanTable=Prepend[scot19joinedTab,scot19heading];

(*Confirm the dimensions for the final table*)
scot19dailyMeanTable//Dimensions

(*Check a small output of the new table in Grid form*)
scot19dailyMeanTable[[1;;2,1;;10]]//Grid

(*Export it into Excel to visualize the entire table*)
Export["Scotland 19 Particulate Matter (Both) - Daily Mean Concentration.xlsx",scot19dailyMeanTable]

(*- Get the means of just PM10 at Scotland Sites in 2019*)

(*Retrieve the positions for Scotland sites which contain data for PM10 and Transpose the data so it is separated into rows and columns*)
CleanedScot19PM10Rows = Position[scot19Clean,"PM10 particulate matter (Hourly measured)"]//Transpose

(*Request the positions for the rows only*)
CleanedScot19PM10Rows[[1]]
scot19PM10dat=scot19Clean[[CleanedScot19PM10Rows[[1]],3;;]]//Transpose;

(*Reconfirm the dimensions*)
scot19PM10dat//Dimensions

(*Remove any cells that do not have any data and then calculate the daily mean *)
scot19PM10part=N@(Mean/@(Partition[scot19PM10dat,24]))

(*Calculate the dimensions for the daily mean - it should be the number of days in a year by number of sites*)
scot19PM10part//Dimensions

(*Transpose the data and set the variable to itself*)
scot19PM10part=scot19PM10part//Transpose;

(*Reconfirm the dimensions after the transpose*)
scot19PM10part//Dimensions

(*Replace any cells containing 'No data' with 0 *)
scot19PM10DailyMean=scot19PM10part/.("No data":>0);

(*Confirm the dimensions have not changed*)
scot19PM10DailyMean//Dimensions

(*- Visualise Scotland data for PM10 from 2019 in a table*)

(*Excluding the heading labels from scot19Clean, join the site names and PM types columns WITH the daily mean values*)
(*Retrieve only the PM10 rows with only the site and PM type columns*)
scotland19CleanPM10TEMP=scot19Clean[[CleanedScot19PM10Rows[[1]],1;;2]];

(*Join the previously created heading for PM10 with the dateObject*)
scot19PM10joinedTab=Partition[Flatten@Table[{scotland19CleanPM10TEMP[[row,1;;2]],scot19PM10DailyMean[[row]]},{row,1,Length[scot19PM10DailyMean]}],367];

(*Confirm the length of the new heading*)
scot19PM10joinedTab//Dimensions

(*Join the two tables that were previously created - scot19PM10joinedTab and scot19heading*)
scot19PM10dailyMeanTable=Prepend[scot19PM10joinedTab,scot19heading];

(*Confirm the dimensions for the final Daily Mean Table for PM10 from 2019*)
scot19PM10dailyMeanTable//Dimensions

(*Check a small output of the new table in Grid form*)
scot19PM10dailyMeanTable[[1;;2,1;;10]]//Grid

(*Export it into Excel to visualize the entire table for PM10 in 2019*)
Export["Scotland 19 Particulate Matter (PM10) - Daily Mean Concentration.xlsx",scot19PM10dailyMeanTable]

(*- Get the mean of just PM2.5 at Scotland Sites in 2019*)

(*Retrieve the positions for Scotland sites which contain data for PM2.5 from 2019 and Transpose the data so it is separated into rows and columns*)
CleanedScot19PM25Rows=Position[scot19Clean,"PM2.5 particulate matter (Hourly measured)"]//Transpose

(*Request the positions for the rows only*)
CleanedScot19PM25Rows[[1]]
scot19PM25dat=scot19Clean[[CleanedScot19PM25Rows[[1]],3;;]]//Transpose;

(*Reconfirm the dimensions*)
scot19PM25dat//Dimensions

(*Remove any cells that do not have any data and then calculate the daily mean *)
scot19PM25part=N@(Mean/@(Partition[scot19PM25dat,24]))

(*Reconfirm the dimensions to ensure we have the appropriate number of means to sites*)
scot19PM25part//Dimensions

(*Transpose the variable and set it equal to itself*)
scot19PM25part=scot19PM25part//Transpose;

(*Check the dimensions after the transpose to confirm the transpose was successful*)
scot19PM25part//Dimensions

(*Replace any cells that contain the value No data with 0*)
scot19PM25DailyMean=scot19PM25part/.("No data":>0);

(*Reconfirm the dimensions*)
scot19PM25DailyMean//Dimensions

(*- Visualise Scotland data for PM2.5 from 2019 in a table*)

(*1. Excluding the heading labels from scot19Clean, join the site names and PM types columns WITH the daily mean values*)
(*NOTE! Here we use PM10 rows because site names are in the same row as PM10 values in the original table*)
scot19PM25col1=scot19Clean[[CleanedScot19PM10Rows[[1]],1]];

(*Here we only get the PM2.5 columns*)
scot19PM25col2=scot19Clean[[CleanedScot19PM25Rows[[1]],2]];

(*Join the two newly created columns with the Daily Mean*)
scotland19CleanPM25TEMP=Partition[Flatten@Table[{scot19PM25col1[[row2]],scot19PM25col2[[row2]]},{row2,1,Length[scot19PM25col1]}],2];
scot19PM25joinedTab=Partition[Flatten@Table[{scotland19CleanPM25TEMP[[row,1;;2]],scot19PM25DailyMean[[row]]},{row,1,Length[scot19PM25DailyMean]}],367];

(*Confirm the length of the new heading*)
scot19PM25joinedTab//Dimensions

(*Join the two tables that were previously created - scot19PM25joinedTab and scot19heading*)
scot19PM25dailyMeanTable=Prepend[scot19PM25joinedTab,scot19heading];

(*Confirm the dimensions for the final Daily Mean Table for PM2.5 from 2019*)
scot19PM25dailyMeanTable//Dimensions

(*Check a small output of the new table in Grid form*)
scot19PM25dailyMeanTable[[1;;2,1;;10]]//Grid

(*Export it into Excel to visualize the entire table for PM2.5 in 2019*)
Export["Scotland 19 Particulate Matter (PM2.5) - Daily Mean Concentration.xlsx",scot19PM25dailyMeanTable]

(*Find latitude, longitude, region and environment type*)

(*- Get geolocations of each sites*)

(*First, check the dimensions of the full 2019 clean dataset*)
scot19Clean//Dimensions

(*Retrieve the Site Names for all of the sites being compared in Scotland*)
scot19sitenames=scot19Clean[[CleanedScot19PM10Rows[[1]],1]]

(*Check the length of the site names to ensure it matches the number of sites we have been analysing*)
scot19sitenames//Length

(*Find the geolocation for each site*)
scotland19geo=FindGeoLocation/@scot19sitenames

(*Determine the Head of the missing expressions*)
scotland19geo[[2]]//Head

(*Using this detail, find the position of all sites that do not have a GeoLocation*)
scot19missingpositions=Position[scotland19geo,Missing]//Transpose

(*Pull the first value from the variable scot19missingpositions in order to determine the positions of sites with the missing variable*)
scot19missingpositions[[1]]

(*Using ReplacePart, update the GeoPosition for all sites that did not previously have coordinates listed*)
scot19cleanedgeo=ReplacePart[scotland19geo,{2->GeoPosition[{57.144555,-2.106472}]}]

(*Convert the GeoPosition to LatitudeLongitude for all sites*)
scot19latlong=LatitudeLongitude/@scot19cleanedgeo

(*- Add Latitude and Longitude to the table*)

(*Transpose the Latitude/Longitude, so each value will be in a separate column*)
scot19latlongTrans=Transpose[scot19latlong]

(*Confirm the dimensions for the first list (latitude) in the new transposed variable*)
scot19latlongTrans[[1]]//Dimensions

(*Create a heading for the Latitude values. Then, prepend the Latitude values and header to a new variable*)
heading= Style["Latitude",{Black,Bold,12}];
scot19latitude=Prepend[scot19latlongTrans[[1]],heading]

(*Confirm the length of the new variable is now all sites plus the header*)
scot19latitude//Length

(*Confirm the dimensions for the second list (longitude) in the new transposed variable*)
scot19latlongTrans[[2]]//Dimensions

(*Create a heading for the Longitude values. Then, prepend the Longitude values and header to a new variable*)
heading2= Style["Longitude",{Black,Bold,12}];
scot19longitude=Prepend[scot19latlongTrans[[2]],heading2]

(*Confirm the length of the new variable is now all sites plus the header*)
scot19longitude//Length

(*- Add sites to the table*)

(*Create a heading for the Site values. Then, prepend the site values and header to a new variable*)
heading3= Style["Site",{Black,Bold,12}];
scot19sites=Prepend[scot19sitenames,heading3]

(*Confirm the length of the new variable is now all sites plus the header*)
scot19sites//Dimensions

(*- Add Zones to the table*)

(*Import the AQ Regions Excel sheet to obtain the Zone details*)
AQZones=Import["AQ_Regions.xlsx",{"Sheets","Closest_Zones"}];

(*Pull the zones for Scotland from this sheet and assign to a new variable*)
ScotAQZones=AQZones[[2;;11,1]]

(*Confirm the dimensions of this variable is equal to the number of sites*)
ScotAQZones//Dimensions

(*Create a heading for the Zone values. Then, prepend the zone values and header to a new variable*)
heading4=Style["Zone",{Black,Bold,12}];
CompleteScotAQZones=Prepend[ScotAQZones,heading4]

(*- Add Environment Type to the table*)

(*Import the AQ Regions Excel sheet to obtain the Environment details*)
AQEnvironmentType=Import["AQ_Regions.xlsx",{"Sheets","Closest_Site"}];

(*Pull the Environment Types for Scotland from this sheet and assign to a new variable*)
ScotAQET=AQEnvironmentType[[2;;11,1]]

(*Confirm the dimensions of this variable is equal to the number of sites*)
ScotAQET//Dimensions

(*Create a heading for the Environment Type values. Then, prepend the Environment Type values and header to a new variable*)
heading5=Style["Environment Type",{Black,Bold,12}];
CompleteScotAQET=Prepend[ScotAQET,heading5]

(*Create a Grid to display the Latitude, Longitude, Site Name, Zone and Environment Type using the variables that were defined in the previous steps*)
scot19holdValue=Grid[Transpose@Partition[Flatten@Table[{scot19latitude, scot19longitude, scot19sites, CompleteScotAQZones,CompleteScotAQET},1],11], Frame->All]

(*Scotland Particulate Matter Mean Concentration for 2020*)

(*Import Scotland Sites 2020 Excel*)

(*When importing this spreadsheet, remove the first 3 and last 4 rows*)
scotland20=Import["Scotland Sites 2020.xlsx",{"Data",1,4;;-5}]

(*Determine the dimensions of our spreadsheet*)
scotland20//Dimensions

(*Transpose the values of the spreadsheet, so the site names are listed in one single column and the date is listed in rows*)
scotland20trans=scotland20//Transpose

(*Reconfirm the dimensions and length after performing the transpose*)
scotland20trans//Dimensions

(*Request a small snippet of the dataset in Grid form to ensure this is how we want the data to look after the Transpose*)
scotland20trans[[1;;6,1;;5]]//Grid

(*Reconfirm the length of the variable*)
scotland20trans[[2]]//Length

(*Remove "Status" rows.*)

(*Retrieve the positions for Scotland sites which contain data for PM10*)
scot20PM10=Position[scotland20trans,"PM10 particulate matter (Hourly measured)"]

(*Transpose the data in order to have all of the rows together and all of the columns together*)
scot20PM10trans=scot20PM10//Transpose

(*Request the positions for the rows only*)
scot20PM10trans[[1]]

(*Confirm the length of the rows - this should match the number of sites*)
scot20PM10trans[[1]]//Length

(*Repeat the same steps above to retrieve the positions for Scotland sites which contain data for PM2.5*)
scot20PM25=Position[scotland20trans,"PM2.5 particulate matter (Hourly measured)"]

(*Transpose the data in order to have all of the rows together and all of the columns together*)
scot20PM25Trans=scot20PM25//Transpose

(*Request the positions for the rows only*)
scot20PM25Trans[[1]]

(*Confirm the length of the rows - this should match the number of sites*)
scot20PM25Trans[[1]]//Length

(*Join the positions for the PM2.5 and PM10 rows. Sorting them will ensure they are ordered by Site*)
PMAllscot20=Join[scot20PM10trans[[1]],scot20PM25Trans[[1]]]//Sort

(*Join the Date/Time data with the site and pollutant information and store in a new variable*)
scotland20nostatus=Join[scotland20trans[[1;;2]],scotland20trans[[PMAllscot20]]]

(*Confirm the dimensions of new variable*)
scotland20nostatus//Dimensions

(*Check a small output of our new variable in Grid form*)
scotland20nostatus[[1;;10,1;;5]]//Grid

(*Turn Hourly Measurements into Daily Values by Averaging Results*)

scotland20Clean=scotland20nostatus;

(*- Getting the means of everything (not separated into PM)*)

(*Calculate the mean of everything for 2020 - NOT separate by PM*)
scot20dat=scotland20Clean[[3;;,3;;]]//Transpose

(*Checking the result for one site*)
scot20dat[[1;;,1]];

(*Partition the defined variable by 24 so we can calculate the mean per day*)
scot20part=N@(Mean/@(Partition[scot20dat,24]))

(*Reconfirm the dimensions for the variable*)
scot20part//Dimensions

(*Transpose the variable*)
scot20part=scot20part//Transpose

(*Reconfirm the dimensions*)
scot20part//Dimensions

(*Check if there's a missing data*)
scot20part[[1]];

(*Replace any values that have No date with 0 *)
scot20DailyMean=scot20part/.("No data":>0)

(*ensure all sites do not have more than 180 days of missing data*)
0/. (Counts/@scot20DailyMean)

(*Check the dimension of the daily mean data*)
scot20DailyMean//Dimensions

(*- Visualising all PM data from 2020 for Scotland in a table*)

(*Exclude the heading labels from scotland20Clean*)
scotland20CleanTEMP=scotland20Clean[[3;;,1;;2]];

(*Join the site names and PM types columns WITH the daily mean values*)
scot20joinedTab=Partition[Flatten@Table[{scotland20CleanTEMP[[row,1;;2]],scot20DailyMean[[row]]},{row,1,Length[scot20DailyMean]}],368];

(*Confirm the dimensions of the new variable*)
scot20joinedTab//Dimensions

(*Create a new heading labels {Site, Particulate Matter, 365 Dates *)
scot20dateObject=scotland20Clean[[1,3;;]]//DeleteDuplicates;

(*Confirm the dimensions for the datObject variable reflects the number of days in the year*)
scot20dateObject//Dimensions

(*Create a heading with Site and Particulate Matter*)
heading={"Site","Particulate Matter"};

(*Join the previously created heading with the dateObject*)
scot20heading=Join[heading,scot20dateObject];

(*Confirm the length of the new heading*)
scot20heading//Length

(*Join the two tables that were previously created - scot20JoinedTab and scot20heading*)
scot20dailyMeanTable=Prepend[scot20joinedTab,scot20heading];

(*Confirm the dimensions for the final table*)
scot20dailyMeanTable//Dimensions

(*Check a small output of the new table in Grid form*)
scot20dailyMeanTable[[1;;2,1;;10]]//Grid

(*Export it into Excel to visualize the entire table*)
Export["Scotland 20 Particulate Matter (Both) - Daily Mean Concentration.xlsx",scot20dailyMeanTable]

(*- Getting the means of just PM10 at Scotland Sites in 2020*)

(*Retrieve the positions for Scotland sites which contain data for PM10 and Transpose the data so it is separated into rows and columns*)
Cleanedscot20PM10Rows=Position[scotland20Clean,"PM10 particulate matter (Hourly measured)"]//Transpose

(*Request the positions for the rows only*)
Cleanedscot20PM10Rows[[1]]
scot20PM10dat=scotland20Clean[[Cleanedscot20PM10Rows[[1]],3;;]]//Transpose;

(*Reconfirm the dimensions*)
scot20PM10dat//Dimensions

(*Remove any cells that do not have any data and then calculate the daily mean *)
scot20PM10part=N@(Mean/@(Partition[scot20PM10dat,24]))

(*Calculate the dimensions for the daily mean - it should be the number of days in a year by number of sites*)
scot20PM10part//Dimensions

(*Transpose the data and set the variable to itself*)
scot20PM10part=scot20PM10part//Transpose;

(*Reconfirm the dimensions after the transpose*)
scot20PM10part//Dimensions

(*Replace any cells containing 'No data' with 0 *)
scot20PM10DailyMean=scot20PM10part/.("No data":>0);

(*Confirm the dimensions have not changed*)
scot20PM10DailyMean//Dimensions

(*- Visualising Scotland data for PM10 from 2020 in a table*)

(*1. Excluding the heading labels from scotland20Clean, join the site names and PM types columns WITH the daily mean values*)
(*Retrieve only the PM10 rows with only the site and PM type columns*)
scotland20PM10CleanTEMP=scotland20Clean[[Cleanedscot20PM10Rows[[1]],1;;2]];

(*Join the previously created heading for PM10 with the dateObject*)
scot20PM10joinedTab=Partition[Flatten@Table[{scotland20PM10CleanTEMP[[row,1;;2]],scot20PM10DailyMean[[row]]},{row,1,Length[scot20PM10DailyMean]}],368];

(*Confirm the length of the new heading*)
scot20PM10joinedTab//Dimensions

(*Join the two tables that were previously created - scot20PM10joinedTab and scot20heading*)
scot20PM10dailyMeanTable=Prepend[scot20PM10joinedTab,scot20heading];

(*Confirm the dimensions for the final Daily Mean Table for PM10 from 2020*)
scot20PM10dailyMeanTable//Dimensions

(*Check a small output of the new table in Grid form*)
scot20PM10dailyMeanTable[[1;;2,1;;10]]//Grid

(*Export it into Excel to visualize the entire table for PM10 in 2020*)
Export["Scotland 20 Particulate Matter (PM10) - Daily Mean Concentration.xlsx",scot20PM10dailyMeanTable]

(*- Getting the mean of just PM2.5 at Scotland Sites in 2020*)

(*Retrieve the positions for Scotland sites which contain data for PM2.5 from 2020 and Transpose the data so it is separated into rows and columns*)
Cleanedscot20PM25Rows=Position[scotland20Clean,"PM2.5 particulate matter (Hourly measured)"]//Transpose

(*Request the positions for the rows only*)
Cleanedscot20PM25Rows[[1]]
scot20PM25dat=scotland20Clean[[Cleanedscot20PM25Rows[[1]],3;;]]//Transpose;

(*Reconfirm the dimensions*)
scot20PM25dat//Dimensions

(*Remove any cells that do not have any data and then calculate the daily mean *)
scot20PM25part=N@(Mean/@(Partition[scot20PM25dat,24]))

(*Reconfirm the dimensions to ensure we have the appropriate number of means to sites*)
scot20PM25part//Dimensions

(*Transpose the variable and set it equal to itself*)
scot20PM25part=scot20PM25part//Transpose;

(*Check the dimensions after the transpose to confirm the transpose was successful*)
scot20PM25part//Dimensions

(*Replace any cells that contain the value No data with 0*)
scot20PM25DailyMean=scot20PM25part/.("No data":>0);

(*Reconfirm the dimensions*)
scot20PM25DailyMean//Dimensions

(*- Visualising Scotland data for PM2.5 from 2019 in a table*)

(*1. Excluding the heading labels from scotland20Clean, join the site names and PM types columns WITH the daily mean values*)
(*NOTE! Here we use PM10 rows because site names are in the same row as PM10 values in the original table*)
scot20PM25col1=scotland20Clean[[Cleanedscot20PM10Rows[[1]],1]];

(*Here we only get the PM2.5 columns*)
scot20PM25col2=scotland20Clean[[Cleanedscot20PM25Rows[[1]],2]];

(*Join the two newly created columns with the Daily Mean*)
scotland20CleanPM25TEMP=Partition[Flatten@Table[{scot20PM25col1[[row2]],scot20PM25col2[[row2]]},{row2,1,Length[scot20PM25col1]}],2];
scot20PM25joinedTab=Partition[Flatten@Table[{scotland20CleanPM25TEMP[[row,1;;2]],scot20PM25DailyMean[[row]]},{row,1,Length[scot20PM25DailyMean]}],368];

(*Confirm the length of the new heading*)
scot20PM25joinedTab//Dimensions

(*Join the two tables that were previously created - scot20PM25joinedTab and scot20heading*)
scot20PM25dailyMeanTable=Prepend[scot20PM25joinedTab,scot20heading];

(*Confirm the dimensions for the final Daily Mean Table for PM2.5 from 2020*)
scot20PM25dailyMeanTable//Dimensions

(*Check a small output of the new table in Grid form*)
scot20PM25dailyMeanTable[[1;;2,1;;10]]//Grid

(*Export it into Excel to visualize the entire table for PM2.5 in 2020*)
Export["Scotland 20 Particulate Matter (PM2.5) - Daily Mean Concentration.xlsx",scot20PM25dailyMeanTable]

(*Graphs *)

(*Temporal visualisation to describe the Daily Average PM10 Reading across all sites in Scotland in 2019*)

Scotdates2019 =scot19PM25dailyMeanTable[[1,3;;]]; (*Creates a list of dates*)

(*Dimensions of daily reading for each site per day*)
allSitesScot19PM10 = Transpose@scot19PM10DailyMean // Dimensions

(*Average value for every day across all sites*)
dailyAvgAllSites19ScotPM10 = Mean @ scot19PM10DailyMean;

(*Transpose to create pairs*)
coordsScot19PM10 = Transpose[{Scotdates2019,dailyAvgAllSites19ScotPM10}];

(*Creating a temporal data object to be able to graph the dates from the PM average reading*)
tDSS19PM10 = TemporalData[coordsScot19PM10]

(*Setting up the Temporal Plot to visualise the trend*)
tDLPS2019PM10 = DateListPlot[tDSS19PM10, Frame->False, AxesLabel->{"Month", "PM 10 (ugm-3)"},PlotLabel->Style["Daily Average PM10 Reading in Scotland for year 2019" , Bold], AspectRatio->1/2] 

(*Temporal visualisation to describe the Daily Average PM 2.5 Reading across all sites in Scotland in 2019*)

(*Daily reading for each site per day*)
allSitesScot19PM25 = Transpose@scot19PM25DailyMean;

(*Average value for every day across all sites*)
dailyAvgAllSites19ScotPM25 = Mean@ scot19PM25DailyMean;

(*Transpose to create pairs*)
coordsScot19PM25 = Transpose[{Scotdates2019,dailyAvgAllSites19ScotPM25 }];

(*Creating a temporal data object to be able to graph the dates from the PM average reading*)
tDSS19PM25 = TemporalData[coordsScot19PM25]

(*Setting up the Temporal Plot to visualise the trend*)
tDLPS2019PM25 = DateListPlot[tDSS19PM25, Frame->False, AxesLabel->{"Month", "PM 2.5 (ugm-3)"},PlotLabel->Style["Daily Average PM2.5 Reading in Scotland for year 2019" , Bold], AspectRatio->1/2] 

(*Temporal visualisation to describe the Daily Average PM10 Reading across all sites in Scotland in 2020*)

Scotdates2020 =scot20PM25dailyMeanTable[[1,3;;]]; (*Creates a list of dates*)
Scotdates2020//Dimensions (*As expected*)
scot20PM10DailyMean  // Dimensions (*Each row is a site with 366 readings, to get the daily reading for all 30 sites, we must transpose*)

(*Daily reading for each site per day*)
allSitesScot20PM10 = Transpose@scot20PM10DailyMean  
allSitesScot20PM10 // Dimensions

(*Average value for every day across all sites*)
dailyAvgAllSites20ScotPM10= Mean @ scot20PM10DailyMean; 

(*Transpose to create pairs*)
coordsScot20PM10 = Transpose[{Scotdates2020, dailyAvgAllSites20ScotPM10}]; 

(*Creating a temporal data object to be able to graph the dates from the PM average reading*)
tDSS20PM10 = TemporalData[coordsScot20PM10] (*tDSE20PM10 = Temporal dataset Scotland 2020 PM10*)

(*Setting up the Temporal Plot to visualise the trend*)
tDLPS2020PM10 = DateListPlot[tDSS20PM10, Frame->False, AxesLabel->{"Month", "PM 10 (ugm-3)"},PlotLabel->Style["Daily Average PM10 Reading in Scotland for year 2020" , Bold], AspectRatio->1/2] 

(*tDLPE2020PM10 = Temporal DateListPlot Scotland 2020 PM 10*)

(*Temporal visualisation to describe the Daily Average PM 2.5 Reading across all sites in Scotland in 2020*)

(*Daily reading for each site per day*)
allSitesScot20PM25 = Transpose@scot20PM25DailyMean  

(*Average value for every day across all sites*)
dailyAvgAllSites20ScotPM25= Mean @ scot20PM25DailyMean;

(*Transpose to create pairs*)
coordsScot20PM25 = Transpose[{Scotdates2020, dailyAvgAllSites20ScotPM25}]; 

(*Creating a temporal data object to be able to graph the dates from the PM average reading*)
tDSS20PM25 = TemporalData[coordsScot20PM25]

(*Setting up the Temporal Plot to visualise the trend*)
tDLPS2020PM25 = DateListPlot[tDSS20PM25, Frame->False, AxesLabel->{"Month", "PM 2.5 (ugm-3)"},PlotLabel->Style["Daily Average PM2.5 Reading in Scotland for year 2020" , Bold], AspectRatio->1/2] 

(*Visual to inspect the Daily Average of PM Values for a Specific Site in Scotland*)

(*Defining site names, will be useful in the manipulate*)
sitesScotland = scot20PM25dailyMeanTable[[2;;,1]] 

(*Confirm the dimensions match the number of sites*)
sitesScotland // Dimensions

(*Creating an association to choose row number from the site names in the Manipulate*)
siteMappingScot =Thread@Rule[Range[10], sitesScotland] 

(*Takes a ListLinePlot for either 2019 or 2020, PM10 or PM2.5 for any monitoring station in scotland and outputs a visual of the daily average PM value*)
Manipulate[ListLinePlot[Transpose[ToExpression@("scot"<>Year<>"PM"<>ToString@pmVal<>"DailyMean")][[;;,Site]],PlotRange->All, 
    AxesLabel->{"Day Number", "PM "<>If[ToExpression[pmVal] == 25, ToString[N@ToExpression@pmVal/10] <>" (ugm-3)", pmVal <> "(ugm-3)"]}, AspectRatio->1/2, PlotStyle->Automatic, 
    PlotLegends->{StringJoin["Average PM10 20",Year ]},
    PlotLabel->"Reading For: "<>siteMappingScot[[Site,2]] <> " PM " <> If[ToExpression[pmVal] == 25, ToString[N@ToExpression@pmVal/10],pmVal]], {Site, siteMappingScot},\[IndentingNewLine]{Year,{"19","20"}}, {pmVal, {"25","10"}}]

(*Comparing Scotland Sites' PM Readings in 2019 and 2020*)

(*Recall the Site Mapping for Scotland*)
siteMappingScot

(*This is similar to the above manipulation but this now compares the average daily PM 10 or PM 2.5 in both 2019 and 2020, so you can see if the trends differ more visually*)
Manipulate[
    Show[
        ListLinePlot[Transpose[ToExpression@("scot19PM"<>ToString@PM<>"DailyMean")][[;;,Site]],PlotRange->All, AxesLabel->{"Day Number", "PM "<>If[ToExpression[PM] == 25, ToString[N@ToExpression@PM/10]<>"(ugm-3)", PM <> "(ugm-3)"]}, AspectRatio->1/2, PlotLegends->{"Average PM10 2019"},PlotLabel->"Reading Comparison For: "<>siteMappingScot[[Site,2]]<> " PM " <> If[ToExpression[PM] == 25, ToString[N@ToExpression@PM/10], PM],PlotStyle->Hue[1/3], ImageSize->Automatic],

        ListLinePlot[Transpose[ToExpression@("scot20PM"<>ToString@PM<>"DailyMean")][[;;,Site]],PlotRange->All, AxesLabel->{"Day Number", "PM "<>If[ToExpression[PM] == 25, ToString[N@ToExpression@PM/10]<>" (ugm-3)", PM <> "(ugm-3)"]}, AspectRatio->1/2, PlotLegends->{"Average PM10 2020"},PlotLabel->"Reading Comparison For: "<>siteMappingScot[[Site,2]]<> " PM " <> If[ToExpression[PM] == 25, ToString[N@ToExpression@PM/10], PM]], PlotStyle->Automatic, ImageSize->Automatic, PlotStyle->Automatic],

{Site, siteMappingScot},{PM,{"25","10"}}]

(*Overlay Graphing for Scotland*)

(*Overlay of PM10  Measurements in Scotland in the year 2019 and 2020*)

(*In this section we will be graphing the average PM10 and PM2.5 for all the sites in Scotland in 2019 and 2020. then we will overlay them in a graph to visualise the differences between the years*)
(*Start by taking the yearly average of each site in Scotland for PM10 in 2019*)
g=scot19holdValue;
pts=QuantityMagnitude/@g[[1]][[;;,1;;2]][[2;;]];(*get the latitude and longitude of all sites*)
pts2=g[[1]][[;;,3]][[2;;]];(*get the site names*)
pts3=Thread@Join[pts//Transpose,List[pts2]];(*Join the two tables*)

scot19PM10DailyMean//Dimensions;
yearlyScot19PM10dat=Mean/@scot19PM10DailyMean;(*Compute the yearly mean for Scotland PM10 in 2019*)
pts3;
scot19PM10YearlyMean=Thread@Join[pts3//Transpose,List[yearlyScot19PM10dat]];(*Join tab3(lat, long, site names) and the yearly mean in one table*)
scot19PM10YearlyMean[[1;;,4]]; (*get only the yearly mean column to plot a graph*)
graphScotPM1019=ListLinePlot[scot19PM10YearlyMean[[1;;,4]],PlotStyle->Green,Filling->Bottom, AxesLabel->{"Sites","PM10 (ugm-3)"},PlotRange->{{0,10},{0,18}},PlotLegends->{"2019"},PlotMarkers->{Automatic, 5}];

(*these options of the function ListLinePlot allow to add a legend, fill the area below the graph and specify the range to show*)

(*Similarly take  the yearly average of each site in Scotland for PM10 in 2020*)
scot20PM10DailyMean//Dimensions;
yearlyScot20PM10dat=Mean/@scot20PM10DailyMean;
pts3;
scot20PM10YearlyMean=Thread@Join[pts3//Transpose,List[yearlyScot20PM10dat]];
scot20PM10YearlyMean[[1;;,4]];
graphScotPM1020=ListLinePlot[scot20PM10YearlyMean[[1;;,4]],PlotStyle->Blue,Filling->Bottom, AxesLabel->{"Sites","PM10 (ugm-3)"},PlotRange->{{0,10},{0,18}},PlotLegends->{"2020"},PlotMarkers->{Automatic, 5}];

Show[graphScotPM1019,graphScotPM1020, PlotLabel->Style["Annual Mean Concentration for PM10 in Scotland", Bold]]

(*Overlay of PM2.5  Measurements in Scotland in the year 2019 and 2020*)

(*This section follows the same structure as before, but uses the variable for PM2.5 instead of PM10*)
scot19PM25DailyMean//Dimensions;
yearlyScot19PM25dat=Mean/@scot19PM25DailyMean;
pts3;
scot19PM25YearlyMean=Thread@Join[pts3//Transpose,List[yearlyScot19PM25dat]];
scot19PM25YearlyMean[[1;;,4]];
graphScotPM2519=ListLinePlot[scot19PM25YearlyMean[[1;;,4]],PlotStyle->Green,Filling->Bottom, AxesLabel->{"Sites","PM2.5 (ugm-3)"},PlotRange->{{0,10},{0,18}},PlotLegends->{"2019"},PlotMarkers->{Automatic, 5}];

scot20PM25DailyMean//Dimensions;
yearlyScot20PM25dat=Mean/@scot20PM25DailyMean;
pts3;
scot19PM25YearlyMean=Thread@Join[pts3//Transpose,List[yearlyScot20PM25dat]];
scot19PM25YearlyMean[[1;;,4]];
graphScotPM2520=ListLinePlot[scot19PM25YearlyMean[[1;;,4]],PlotStyle->Blue,Filling->Bottom, AxesLabel->{"Sites","PM2.5 (ugm-3)"},PlotRange->{{0,10},{0,18}},PlotLegends->{"2020"},PlotMarkers->{Automatic, 5}];

Show[graphScotPM2519, graphScotPM2520,PlotLabel->Style["Annual Mean Concentration for PM2.5 in Scotland", Bold]]

(*Ridgeline Graph for all sites in Scotland*)

(*Ridgeline graphs are tools to simultaneously visualise the probability distribution function of several datasets. In this case we are able to visualise the distribution of PM in Scotland sites*)

(*PM10 - Ridgeline Graph for Scotland 2019*)

tableScot19PM10=Table[{Min[scot19PM10DailyMean[[i]]],Mean[scot19PM10DailyMean[[i]]],Max[scot19PM10DailyMean[[i]]], StandardDeviation[scot19PM10DailyMean[[i]]]},{i,1,10}]//N;(*find the minimum, mean, max and standard deviation value for each site in the year 2019*)
head2={{scot19sites[[2;;]]},{"Minimum","Mean", "Maximum", "Standard Deviation"}};

(*now we organise all entries into the same table*)
maxScot19PM10=Max[tableScot19PM10[[1;;,2]]];(*find largest mean value in the table*)
minScot19PM10=Min[tableScot19PM10[[1;;,2]]];(*find smallest  mean value in the table*)
colorRuleMax=Table[n+1->If[tableScot19PM10[[n,2]]==maxScot19PM10,Orange],{n,1,10}];(*colour the largest number in red*)
colorRuleMin=Table[n+1->If[tableScot19PM10[[n,2]]==minScot19PM10,Green],{n,1,10}];(*colour the smallest number in green*)

List[Grid[Join[Transpose[{Join[{""},head2[[1]]//Transpose]}],Join[head2[[{2}]],tableScot19PM10],2],Frame->All,Background->{None,colorRuleMin}],Grid[Join[Transpose[{Join[{""},head2[[1]]//Transpose]}],Join[head2[[{2}]],tableScot19PM10],2],Frame->All,Background->{None,colorRuleMax}]](*show the table with values of each site*)
ListLinePlot3D[Table[PDF[NormalDistribution[tableScot19PM10[[i,2]],tableScot19PM10[[i,4]]],x],{i,1,10},{x,-10,30}],PlotRange->All,PlotLegends->{"Probability Distributions for PM10 mean concentrations in all Scotland sites (2019)"},Filling->Bottom,AspectRatio->Full] (*graph the probability distributions for all sites in 2019.*)

(*PM2.5 - Ridgeline Graph for Scotland 2019*)

(*This section follows the same structure as before, but uses the variable for PM2.5 instead of PM10*)
tableScot19PM25=Table[{Min[scot19PM25DailyMean[[i]]],Mean[scot19PM25DailyMean[[i]]],Max[scot19PM25DailyMean[[i]]], StandardDeviation[scot19PM25DailyMean[[i]]]},{i,1,10}]//N;(*find the minimum, mean, max and standard deviation value for each site in the year 2019*)

(*now we organise all entries into the same table*)
maxScot19PM25=Max[tableScot19PM25[[1;;,2]]];(*find largest mean value in the table*)
minScot19PM25=Min[tableScot19PM25[[1;;,2]]];(*find smallest  mean value in the table*)
colorRuleMax=Table[n+1->If[tableScot19PM25[[n,2]]==maxScot19PM25,Orange],{n,1,10}];(*colour the largest number in red*)
colorRuleMin=Table[n+1->If[tableScot19PM25[[n,2]]==minScot19PM25,Green],{n,1,10}];(*colour the smallest number in green*)

List[Grid[Join[Transpose[{Join[{""},head2[[1]]//Transpose]}],Join[head2[[{2}]],tableScot19PM25],2],Frame->All,Background->{None,colorRuleMin}],Grid[Join[Transpose[{Join[{""},head2[[1]]//Transpose]}],Join[head2[[{2}]],tableScot19PM25],2],Frame->All,Background->{None,colorRuleMax}]](*show the table with values of each site*)
ListLinePlot3D[Table[PDF[NormalDistribution[tableScot19PM25[[i,2]],tableScot19PM25[[i,4]]],x],{i,1,10},{x,-10,30}],PlotRange->All,PlotLegends->{"Probability Distributions for PM2.5 mean concentrations in all Scotland sites (2019)"},Filling->Bottom,AspectRatio->Full](*graph the probability distributions for all sites in 2019.*)

(*PM10 - Ridgeline Graph for Scotland 2020*)

(*This section follows the same structure as before, but for PM10 2020*)
tableScot20PM10=Table[{Min[scot20PM10DailyMean[[i]]],Mean[scot20PM10DailyMean[[i]]],Max[scot20PM10DailyMean[[i]]], StandardDeviation[scot20PM10DailyMean[[i]]]},{i,1,10}]//N;(*find the minimum, mean, max and standard deviation value for each site in the year 2020*)

(*now we organise all entries into the same table*)
maxScot20PM10=Max[tableScot20PM10[[1;;,2]]];(*find largest mean value in the table*)
minScot20PM10=Min[tableScot20PM10[[1;;,2]]];(*find smallest  mean value in the table*)
colorRuleMax=Table[n+1->If[tableScot20PM10[[n,2]]==maxScot20PM10,Orange],{n,1,10}];(*colour the largest number in red*)
colorRuleMin=Table[n+1->If[tableScot20PM10[[n,2]]==minScot20PM10,Green],{n,1,10}];(*colour the smallest number in green*)

List[Grid[Join[Transpose[{Join[{""},head2[[1]]//Transpose]}],Join[head2[[{2}]],tableScot20PM10],2],Frame->All,Background->{None,colorRuleMin}],Grid[Join[Transpose[{Join[{""},head2[[1]]//Transpose]}],Join[head2[[{2}]],tableScot20PM10],2],Frame->All,Background->{None,colorRuleMax}]](*show the table with values of each site*)
ListLinePlot3D[Table[PDF[NormalDistribution[tableScot20PM10[[i,2]],tableScot20PM10[[i,4]]],x],{i,1,10},{x,-10,30}],PlotRange->All,PlotLegends->{"Probability Distributions for PM10 mean concentrations in all Scotland sites (2020)"},Filling->Bottom,AspectRatio->Full](*graph the probability distributions for all sites in 2019.*)

(*PM2.5 - Ridgeline Graph for Scotland 2020*)

(*This section follows the same structure as before, but uses the variable for PM2.5 instead of PM10*)
tableScot20PM25=Table[{Min[scot20PM25DailyMean[[i]]],Mean[scot20PM25DailyMean[[i]]],Max[scot20PM25DailyMean[[i]]], StandardDeviation[scot20PM25DailyMean[[i]]]},{i,1,10}]//N;(*find the minimum, mean, max and standard deviation value for each site in the year 2020*)

(*now we organise all entries into the same table*)
maxScot20PM25=Max[tableScot20PM25[[1;;,2]]];(*find largest mean value in the table*)
minScot20PM25=Min[tableScot20PM25[[1;;,2]]];(*find smallest  mean value in the table*)
colorRuleMax=Table[n+1->If[tableScot20PM25[[n,2]]==maxScot20PM25,Orange],{n,1,10}];(*colour the largest number in red*)
colorRuleMin=Table[n+1->If[tableScot20PM25[[n,2]]==minScot20PM25,Green],{n,1,10}];(*colour the smallest number in green*)

List[Grid[Join[Transpose[{Join[{""},head2[[1]]//Transpose]}],Join[head2[[{2}]],tableScot20PM25],2],Frame->All,Background->{None,colorRuleMin}],Grid[Join[Transpose[{Join[{""},head2[[1]]//Transpose]}],Join[head2[[{2}]],tableScot20PM25],2],Frame->All,Background->{None,colorRuleMax}]](*show the table with values of each site*)
ListLinePlot3D[Table[PDF[NormalDistribution[tableScot20PM25[[i,2]],tableScot20PM25[[i,4]]],x],{i,1,10},{x,-10,30}],PlotRange->All,PlotLegends->{"Probability Distributions for PM2.5 mean concentrations in all Scotland sites (2020)"},Filling->Bottom,AspectRatio->Full](*graph the probability distributions for all sites in 2019.*)

(*Daily average PM value for the entire of Scotland in 2019 and 2020*)

dailyavg2019pm10Scot = Mean@tableScot19PM10[[1;;10,2]] (*Average for all of scotland PM10 value in 2019*)
dailyavg2019pm25Scot = Mean@tableScot19PM25[[1;;10,2]] (*Average for all of scotland PM2.5 value in 2019*)
dailyavg2020pm10Scot = Mean@tableScot20PM10[[1;;10,2]] (*Average for all of scotland PM10 value in 2020*)
dailyavg2020pm10Scot = Mean@tableScot20PM25[[1;;10,2]] (*Average for all of scotland PM2.5 value in 2020*)